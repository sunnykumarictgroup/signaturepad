{"version":3,"sources":["webpack:///src/environments/environment.ts","webpack:///dist/projects/signature-processing/src/lib/signature-processing.service.ts","webpack:///dist/projects/signature-processing/src/lib/signature-processing-unit/signature-processing-unit.component.ts","webpack:///dist/projects/signature-processing/src/lib/signature-processing.component.ts","webpack:///dist/projects/signature-processing/src/lib/signature-processing.module.ts","webpack:///dist/projects/signature-processing/src/public-api.ts","webpack:///dist/projects/signature-processing/src/signature-processing.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/main.ts","webpack:///$_lazy_route_resource lazy namespace object"],"names":["environment","production","url","SignatureProcessingService","http","params","console","log","post","SignatureProcessingUnitComponent","service","backendRes","spadu","signdata","selectedFile","event","target","value","files","fd","FormData","append","name","insertUploadSignature","subscribe","result","signaturePad","signaturePadElement","nativeElement","clear","data","toData","pop","fromData","r","Math","round","random","g","b","color","penColor","base64","toDataURL","blob","base64toBlob","insertSignature","bytestring","atob","split","mimeString","byteNumbers","Array","length","i","charAt","ia","Uint8Array","Blob","type","dataURL","filename","navigator","userAgent","indexOf","window","open","dataURLToBlob","URL","createObjectURL","a","document","createElement","href","download","body","appendChild","click","revokeObjectURL","parts","contentType","raw","rawLength","uInt8Array","charCodeAt","isEmpty","alert","SignatureProcessingComponent","SignatureProcessingModule","AppComponent","title","AppModule","bootstrapModule","err","error","webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id"],"mappings":"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","file":"main-es5.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpEvent } from '@angular/common/http'\n\nconst url = 'http://localhost:9000/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignatureProcessingService {\n\n  constructor(private http:HttpClient) { }\n\n  insertSignature(params: any) {\n    console.log(params)\n   \n    return this.http.post( url + 'api/user/insertSignature',params);\n  }\n\n  insertUploadSignature(params: any) {\n    console.log(params)\n   \n    return this.http.post( url + 'upload',params);\n  }\n}\n","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport SignaturePad from 'signature_pad';\n import { SignatureProcessingService } from '../signature-processing.service';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'lib-signature-processing-unit',\n  templateUrl: './signature-processing-unit.component.html',\n  styleUrls: ['./signature-processing-unit.component.css']\n})\n\nexport class SignatureProcessingUnitComponent implements OnInit {\n  @ViewChild('sPad', {static: true}) signaturePadElement;\n  signaturePad: any;\n backendRes: any = {\n  spadu:{signdata:''}\n }\n  selectedFile: any = null;\n  selectImage(event: any){\n    if(event.target.value){\n      this.selectedFile = <File>event.target.files[0]\n    }\n  \n   \n  }\n  onUpload() {\n\n    const fd = new FormData();\n    // console.log(this.selectedFile.name,'hhhhhhhhhhhhhh');\n    fd.append('sign', this.selectedFile,this.selectedFile.name)\n      this.service.insertUploadSignature(fd).subscribe((result:any)=>{\n        this.backendRes=result;\n      console.log(result)\n    })\n\n  }\n\n  constructor(private service : SignatureProcessingService) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  ngAfterViewInit(): void {\n    this.signaturePad = new SignaturePad(this.signaturePadElement.nativeElement);\n  }\n\n  clear() {\n    this.signaturePad.clear();\n  }\n  undo() {\n    const data = this.signaturePad.toData();\n    if (data) {\n      data.pop(); // remove the last dot or line\n      this.signaturePad.fromData(data);\n    }\n  }\n  changeColor() {\n    const r = Math.round(Math.random() * 255);\n    const g = Math.round(Math.random() * 255);\n    const b = Math.round(Math.random() * 255);\n    const color = 'rgb(' + r + ',' + g + ',' + b + ')';\n    this.signaturePad.penColor = color;\n  }\n\n  drawComplete() {\n    \n    const base64 = this.signaturePad.toDataURL('image/png',0.5);\n    console.log(base64);\n    const blob = this.base64toBlob(base64);\n    this.service.insertSignature({signdata:base64}).subscribe(result=>{\n      console.log(result)\n    })\n    //console.log(blob);\n   \n  }\n  base64toBlob(base64) {\n    const bytestring = atob(base64.split(',')[1]);\n    const mimeString = base64.split(',')[0].split(':')[1].split(':')[0];\n    const byteNumbers = new Array(bytestring.length);\n    for (let i=0; i<bytestring.length; i++) {\n      byteNumbers[i] = bytestring.charAt(i);\n    }\n    const ia = new Uint8Array(byteNumbers);\n    return new Blob([ia], {type: mimeString});\n  }\n  download(dataURL, filename) {\n    if (navigator.userAgent.indexOf('Safari') > -1 && navigator.userAgent.indexOf('Chrome') === -1) {\n      window.open(dataURL);\n    } else {\n      const blob = this.dataURLToBlob(dataURL);\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n\n      document.body.appendChild(a);\n      a.click();\n\n      window.URL.revokeObjectURL(url);\n    }\n  }\n  dataURLToBlob(dataURL) {\n    // Code taken from https://github.com/ebidel/filer.js\n    const parts = dataURL.split(';base64,');\n    const contentType = parts[0].split(':')[1];\n    const raw = window.atob(parts[1]);\n    const rawLength = raw.length;\n    const uInt8Array = new Uint8Array(rawLength);\n    for (let i = 0; i < rawLength; ++i) {\n      uInt8Array[i] = raw.charCodeAt(i);\n    }\n    return new Blob([uInt8Array], { type: contentType });\n  }\n  savePNG() {\n    if (this.signaturePad.isEmpty()) {\n      alert('Please provide a signature first.');\n    } else {\n      const dataURL = this.signaturePad.toDataURL();\n      this.download(dataURL, 'signature.png');\n    }\n  }\n  \n\n\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-signature-processing',\n  template: `\n    <p>\n      signature-processing works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class SignatureProcessingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { SignatureProcessingComponent } from './signature-processing.component';\nimport { SignatureProcessingUnitComponent } from './signature-processing-unit/signature-processing-unit.component';\n\n\n\nimport { BrowserModule } from '@angular/platform-browser';\n\n\nimport { HttpClientModule } from '@angular/common/http'\nimport { FormsModule } from '@angular/forms'\n\n@NgModule({\n  declarations: [SignatureProcessingComponent, SignatureProcessingUnitComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n\n  ],\n  exports: [SignatureProcessingComponent, SignatureProcessingUnitComponent]\n})\nexport class SignatureProcessingModule { }\n","/*\n * Public API Surface of signature-processing\n */\nexport * from './lib/signature-processing-unit/signature-processing-unit.component';\nexport * from './lib/signature-processing.service';\nexport * from './lib/signature-processing.component';\nexport * from './lib/signature-processing.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { Component } from '@angular/core';\r\nimport SignaturePad from 'signature_pad';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'signaturetest';\r\n}\r\n","<!-- \r\n<router-outlet></router-outlet> -->\r\n\r\n<lib-signature-processing-unit></lib-signature-processing-unit>","import { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\n\r\n// import { BrowserModule } from '@angular/platform-browser';\r\n\r\n// import { AppRoutingModule } from './app-routing.module';\r\n\r\n// import { ComponentComponent } from './component/component.component';\r\n// import { HttpClientModule } from '@angular/common/http'\r\n// import { FormsModule } from '@angular/forms'\r\n\r\nimport { SignatureProcessingModule } from 'signature-processing';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    // ComponentComponent\r\n  ],\r\n  imports: [\r\n    // BrowserModule,\r\n    // AppRoutingModule,\r\n    // HttpClientModule,\r\n    // FormsModule\r\n    SignatureProcessingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"]}