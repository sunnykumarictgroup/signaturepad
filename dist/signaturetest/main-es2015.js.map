{"version":3,"sources":["./src/environments/environment.ts","./dist/projects/signature-processing/src/lib/signature-processing.service.ts","./dist/projects/signature-processing/src/lib/signature-processing-unit/signature-processing-unit.component.ts","./dist/projects/signature-processing/src/lib/signature-processing.component.ts","./dist/projects/signature-processing/src/lib/signature-processing.module.ts","./dist/projects/signature-processing/src/public-api.ts","./dist/projects/signature-processing/src/signature-processing.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpEvent } from '@angular/common/http'\n\nconst url = 'http://localhost:9000/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignatureProcessingService {\n\n  constructor(private http:HttpClient) { }\n\n  insertSignature(params: any) {\n    console.log(params)\n   \n    return this.http.post( url + 'api/user/insertSignature',params);\n  }\n\n  insertUploadSignature(params: any) {\n    console.log(params)\n   \n    return this.http.post( url + 'upload',params);\n  }\n}\n","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport SignaturePad from 'signature_pad';\n import { SignatureProcessingService } from '../signature-processing.service';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'lib-signature-processing-unit',\n  templateUrl: './signature-processing-unit.component.html',\n  styleUrls: ['./signature-processing-unit.component.css']\n})\n\nexport class SignatureProcessingUnitComponent implements OnInit {\n  @ViewChild('sPad', {static: true}) signaturePadElement;\n  signaturePad: any;\n backendRes: any = {\n  spadu:{signdata:''}\n }\n  selectedFile: any = null;\n  selectImage(event: any){\n    if(event.target.value){\n      this.selectedFile = <File>event.target.files[0]\n    }\n  \n   \n  }\n  onUpload() {\n\n    const fd = new FormData();\n    // console.log(this.selectedFile.name,'hhhhhhhhhhhhhh');\n    fd.append('sign', this.selectedFile,this.selectedFile.name)\n      this.service.insertUploadSignature(fd).subscribe((result:any)=>{\n        this.backendRes=result;\n      console.log(result)\n    })\n\n  }\n\n  constructor(private service : SignatureProcessingService) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  ngAfterViewInit(): void {\n    this.signaturePad = new SignaturePad(this.signaturePadElement.nativeElement);\n  }\n\n  clear() {\n    this.signaturePad.clear();\n  }\n  undo() {\n    const data = this.signaturePad.toData();\n    if (data) {\n      data.pop(); // remove the last dot or line\n      this.signaturePad.fromData(data);\n    }\n  }\n  changeColor() {\n    const r = Math.round(Math.random() * 255);\n    const g = Math.round(Math.random() * 255);\n    const b = Math.round(Math.random() * 255);\n    const color = 'rgb(' + r + ',' + g + ',' + b + ')';\n    this.signaturePad.penColor = color;\n  }\n\n  drawComplete() {\n    \n    const base64 = this.signaturePad.toDataURL('image/png',0.5);\n    console.log(base64);\n    const blob = this.base64toBlob(base64);\n    this.service.insertSignature({signdata:base64}).subscribe(result=>{\n      console.log(result)\n    })\n    //console.log(blob);\n   \n  }\n  base64toBlob(base64) {\n    const bytestring = atob(base64.split(',')[1]);\n    const mimeString = base64.split(',')[0].split(':')[1].split(':')[0];\n    const byteNumbers = new Array(bytestring.length);\n    for (let i=0; i<bytestring.length; i++) {\n      byteNumbers[i] = bytestring.charAt(i);\n    }\n    const ia = new Uint8Array(byteNumbers);\n    return new Blob([ia], {type: mimeString});\n  }\n  download(dataURL, filename) {\n    if (navigator.userAgent.indexOf('Safari') > -1 && navigator.userAgent.indexOf('Chrome') === -1) {\n      window.open(dataURL);\n    } else {\n      const blob = this.dataURLToBlob(dataURL);\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n\n      document.body.appendChild(a);\n      a.click();\n\n      window.URL.revokeObjectURL(url);\n    }\n  }\n  dataURLToBlob(dataURL) {\n    // Code taken from https://github.com/ebidel/filer.js\n    const parts = dataURL.split(';base64,');\n    const contentType = parts[0].split(':')[1];\n    const raw = window.atob(parts[1]);\n    const rawLength = raw.length;\n    const uInt8Array = new Uint8Array(rawLength);\n    for (let i = 0; i < rawLength; ++i) {\n      uInt8Array[i] = raw.charCodeAt(i);\n    }\n    return new Blob([uInt8Array], { type: contentType });\n  }\n  savePNG() {\n    if (this.signaturePad.isEmpty()) {\n      alert('Please provide a signature first.');\n    } else {\n      const dataURL = this.signaturePad.toDataURL();\n      this.download(dataURL, 'signature.png');\n    }\n  }\n  \n\n\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-signature-processing',\n  template: `\n    <p>\n      signature-processing works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class SignatureProcessingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { SignatureProcessingComponent } from './signature-processing.component';\nimport { SignatureProcessingUnitComponent } from './signature-processing-unit/signature-processing-unit.component';\n\n\n\nimport { BrowserModule } from '@angular/platform-browser';\n\n\nimport { HttpClientModule } from '@angular/common/http'\nimport { FormsModule } from '@angular/forms'\n\n@NgModule({\n  declarations: [SignatureProcessingComponent, SignatureProcessingUnitComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n\n  ],\n  exports: [SignatureProcessingComponent, SignatureProcessingUnitComponent]\n})\nexport class SignatureProcessingModule { }\n","/*\n * Public API Surface of signature-processing\n */\nexport * from './lib/signature-processing-unit/signature-processing-unit.component';\nexport * from './lib/signature-processing.service';\nexport * from './lib/signature-processing.component';\nexport * from './lib/signature-processing.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n","import { Component } from '@angular/core';\r\nimport SignaturePad from 'signature_pad';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent {\r\n  title = 'signaturetest';\r\n}\r\n","<!-- \r\n<router-outlet></router-outlet> -->\r\n\r\n<lib-signature-processing-unit></lib-signature-processing-unit>","import { NgModule } from '@angular/core';\r\nimport { AppComponent } from './app.component';\r\n\r\n// import { BrowserModule } from '@angular/platform-browser';\r\n\r\n// import { AppRoutingModule } from './app-routing.module';\r\n\r\n// import { ComponentComponent } from './component/component.component';\r\n// import { HttpClientModule } from '@angular/common/http'\r\n// import { FormsModule } from '@angular/forms'\r\n\r\nimport { SignatureProcessingModule } from 'signature-processing';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    // ComponentComponent\r\n  ],\r\n  imports: [\r\n    // BrowserModule,\r\n    // AppRoutingModule,\r\n    // HttpClientModule,\r\n    // FormsModule\r\n    SignatureProcessingModule\r\n  ],\r\n  providers: [],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}