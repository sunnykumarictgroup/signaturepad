{"version":3,"file":"sunnykumarsk53-signature-processing.js","sources":["../../../projects/signature-processing/src/lib/signature-processing.service.ts","../../../projects/signature-processing/src/lib/signature-processing-unit/signature-processing-unit.component.ts","../../../projects/signature-processing/src/lib/signature-processing.component.ts","../../../projects/signature-processing/src/lib/signature-processing.module.ts","../../../projects/signature-processing/src/public-api.ts","../../../projects/signature-processing/src/sunnykumarsk53-signature-processing.ts"],"sourcesContent":["\nimport { Injectable } from '@angular/core';\nimport { HttpClient, HttpEvent } from '@angular/common/http'\n\nconst url = 'http://localhost:9000/';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SignatureProcessingService {\n\n  constructor(private http:HttpClient) { }\n\n  insertSignature(params: any) {\n    console.log(params)\n   \n    return this.http.post( url + 'api/user/insertSignature',params);\n  }\n\n  insertUploadSignature(params: any) {\n    console.log(params)\n   \n    return this.http.post( url + 'upload',params);\n  }\n}\n","import { AfterViewInit, Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport SignaturePad from 'signature_pad';\n import { SignatureProcessingService } from '../signature-processing.service';\nimport { FormBuilder, FormGroup } from '@angular/forms';\n\n@Component({\n  selector: 'lib-signature-processing-unit',\n  templateUrl: './signature-processing-unit.component.html',\n  styleUrls: ['./signature-processing-unit.component.css']\n})\n\nexport class SignatureProcessingUnitComponent implements OnInit {\n  @ViewChild('sPad', {static: true}) signaturePadElement;\n  signaturePad: any;\n backendRes: any = {\n  spadu:{signdata:''}\n }\n  selectedFile: any = null;\n  selectImage(event: any){\n    if(event.target.value){\n      this.selectedFile = <File>event.target.files[0]\n    }\n  \n   \n  }\n  onUpload() {\n\n    const fd = new FormData();\n    // console.log(this.selectedFile.name,'hhhhhhhhhhhhhh');\n    fd.append('sign', this.selectedFile,this.selectedFile.name)\n      this.service.insertUploadSignature(fd).subscribe((result:any)=>{\n        this.backendRes=result;\n      console.log(result)\n    })\n\n  }\n\n  constructor(private service : SignatureProcessingService) { }\n\n  ngOnInit(): void {\n    \n  }\n\n  ngAfterViewInit(): void {\n    this.signaturePad = new SignaturePad(this.signaturePadElement.nativeElement);\n  }\n\n  clear() {\n    this.signaturePad.clear();\n  }\n  undo() {\n    const data = this.signaturePad.toData();\n    if (data) {\n      data.pop(); // remove the last dot or line\n      this.signaturePad.fromData(data);\n    }\n  }\n  changeColor() {\n    const r = Math.round(Math.random() * 255);\n    const g = Math.round(Math.random() * 255);\n    const b = Math.round(Math.random() * 255);\n    const color = 'rgb(' + r + ',' + g + ',' + b + ')';\n    this.signaturePad.penColor = color;\n  }\n\n  drawComplete() {\n    \n    const base64 = this.signaturePad.toDataURL('image/png',0.5);\n    console.log(base64);\n    const blob = this.base64toBlob(base64);\n    this.service.insertSignature({signdata:base64}).subscribe(result=>{\n      console.log(result)\n    })\n    //console.log(blob);\n   \n  }\n  base64toBlob(base64) {\n    const bytestring = atob(base64.split(',')[1]);\n    const mimeString = base64.split(',')[0].split(':')[1].split(':')[0];\n    const byteNumbers = new Array(bytestring.length);\n    for (let i=0; i<bytestring.length; i++) {\n      byteNumbers[i] = bytestring.charAt(i);\n    }\n    const ia = new Uint8Array(byteNumbers);\n    return new Blob([ia], {type: mimeString});\n  }\n  download(dataURL, filename) {\n    if (navigator.userAgent.indexOf('Safari') > -1 && navigator.userAgent.indexOf('Chrome') === -1) {\n      window.open(dataURL);\n    } else {\n      const blob = this.dataURLToBlob(dataURL);\n      const url = window.URL.createObjectURL(blob);\n      const a = document.createElement('a');\n      a.href = url;\n      a.download = filename;\n\n      document.body.appendChild(a);\n      a.click();\n\n      window.URL.revokeObjectURL(url);\n    }\n  }\n  dataURLToBlob(dataURL) {\n    // Code taken from https://github.com/ebidel/filer.js\n    const parts = dataURL.split(';base64,');\n    const contentType = parts[0].split(':')[1];\n    const raw = window.atob(parts[1]);\n    const rawLength = raw.length;\n    const uInt8Array = new Uint8Array(rawLength);\n    for (let i = 0; i < rawLength; ++i) {\n      uInt8Array[i] = raw.charCodeAt(i);\n    }\n    return new Blob([uInt8Array], { type: contentType });\n  }\n  savePNG() {\n    if (this.signaturePad.isEmpty()) {\n      alert('Please provide a signature first.');\n    } else {\n      const dataURL = this.signaturePad.toDataURL();\n      this.download(dataURL, 'signature.png');\n    }\n  }\n  \n\n\n}","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-signature-processing',\n  template: `\n    <p>\n      signature-processing works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class SignatureProcessingComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { SignatureProcessingComponent } from './signature-processing.component';\nimport { SignatureProcessingUnitComponent } from './signature-processing-unit/signature-processing-unit.component';\n\n\n\nimport { BrowserModule } from '@angular/platform-browser';\n\n\nimport { HttpClientModule } from '@angular/common/http'\nimport { FormsModule } from '@angular/forms'\n\n@NgModule({\n  declarations: [SignatureProcessingComponent, SignatureProcessingUnitComponent],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n\n  ],\n  exports: [SignatureProcessingComponent, SignatureProcessingUnitComponent]\n})\nexport class SignatureProcessingModule { }\n","/*\n * Public API Surface of signature-processing\n */\nexport * from './lib/signature-processing-unit/signature-processing-unit.component';\nexport * from './lib/signature-processing.service';\nexport * from './lib/signature-processing.component';\nexport * from './lib/signature-processing.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}